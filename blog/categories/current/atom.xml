<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Current | A Geek's Life]]></title>
  <link href="http://shubhamverma.github.io/blog/categories/current/atom.xml" rel="self"/>
  <link href="http://shubhamverma.github.io/"/>
  <updated>2014-11-03T12:52:16+00:00</updated>
  <id>http://shubhamverma.github.io/</id>
  <author>
    <name><![CDATA[Shubham Verma]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Journey With Programming Languages - Part 3]]></title>
    <link href="http://shubhamverma.github.io/blog/2014/11/03/journey-with-programming-languages-part-3/"/>
    <updated>2014-11-03T12:42:46+00:00</updated>
    <id>http://shubhamverma.github.io/blog/2014/11/03/journey-with-programming-languages-part-3</id>
    <content type="html"><![CDATA[<h3>Diploma - B. Tech - Current</h3>

<p>Been a long time since the last post.</p>

<p>So, the next stop in my journey was the <strong>Web land</strong>. There was <a href="http://en.wikipedia.org/wiki/HTML">HTML</a>, <a href="http://en.wikipedia.org/wiki/Cascading_Style_Sheets">CSS</a>, and <a href="http://en.wikipedia.org/wiki/JavaScript">JavaScript</a>. This is where I learned the <strong>principle of separating the actual content from its presentation and behaviour</strong>. Now this principle is very general, hence is not only applicable to the Web land, but also to <em>(insert your favorite development platform here)</em> which basically includes some kind of <a href="http://en.wikipedia.org/wiki/User_Interface">User Interface</a>. It can also be considered as a special case of the <a href="http://en.wikipedia.org/wiki/Separation_of_concerns">Separation of Concerns</a> principle. I didn&rsquo;t touch much on the <strong>JavaScript</strong> as I was unware of its real power!</p>

<p>Then I got interested in <strong>Game Development</strong> (O yeah!). I tried many approaches including <a href="http://en.wikipedia.org/wiki/Allegro_%28software%29">Allegro</a>, <a href="http://en.wikipedia.org/wiki/GameMaker:_Studio">Game Maker</a> etc. and finally ended up using <a href="http://en.wikipedia.org/wiki/Blitz_BASIC">Blitz BASIC</a>. Its just a derivative of the original <a href="http://en.wikipedia.org/wiki/BASIC">BASIC</a> along with some specific features for game development such as <strong>graphics, input</strong> and <strong>audio handling</strong> etc. The syntax was easy and the approach was pretty <a href="http://en.wikipedia.org/wiki/Rapid_application_development">RAD</a>. I developed a simple <strong>vertical scrolling shooter</strong> with help of my awesome younger brother (who is way more creative than me!). We together did some game UI elements with <a href="http://en.wikipedia.org/wiki/Adobe_Photoshop">Photoshop</a>.</p>

<p>I designed the <strong>ship</strong> for the game myself with the <a href="http://www.aseprite.org/">Allegro Sprite Editor</a>. It was a 32x32 <strong>bmp</strong>. For the rest of the sprites and game music, I searched the web. <strong>The game lagged as the number of asteroids increased, due to my inefficient algorithm, as it was my first attempt on building a complete game</strong>. Somehow I managed to finish it. It was a fun experience.</p>

<p>The next language was the cousin of the previous one, <a href="http://en.wikipedia.org/wiki/Visual_Basic">Visual Basic</a>. I didn&rsquo;t like it much and was not convinced by the whole <strong>drag and drop idea for developing user-interfaces</strong>. It might have been a boon in early times, but for me, <strong>it seemed less programmatic</strong>. I just did for the sake of my curriculum.</p>

<p>As time went by, my diploma finished and I came to <strong>Chennai</strong> for the B. Tech. in Computer Science.</p>

<p><a href="http://en.wikipedia.org/wiki/Python_%28programming_language%29">Python</a> seemed to be very popular those days on the web. I looked up for some examples and decided to give it a shot. <strong>I loved it!</strong> It was <strong>fun</strong>, <strong>easy to learn</strong> and <strong>understand</strong>, had <strong>cool in-built data structures</strong>. The syntax was plain and simple, just like English. I found it very useful for <strong>quick tasks</strong> and <strong>programming competitions</strong>. I used it for solving problems from websites like <a href="https://projecteuler.net/">Project Euler</a>, <a href="http://codeeval.com">CodeEval</a>, <a href="www.spoj.pl">SPOJ</a> etc. My solutions to some of the problems from Project Euler and CodeEval can be found on my <a href="https://github.com/shubhamVerma">Github</a>.</p>

<p><strong>Though I loved Python, I couldn&rsquo;t decided whether I wanted to pursue my careeer in it</strong>. I didn&rsquo;t pursue the advanced concepts but had learnt enough for trivial problem solving.</p>

<p>My current favorite is JavaScript. It is the language of Web, and Web is the Future. So JavaScript is the language of future! To quote <a href="http://www.crockford.com/">Douglas Crockford</a>, the great JavaScript wizard:</p>

<blockquote><p>The World&rsquo;s Most Misunderstood Programming Language Has Become the World&rsquo;s Most Popular Programming Language</p></blockquote>

<p>and yes, he is referring to <a href="http://javascript.crockford.com/popular.html">JavaScript</a>. I am very <strong>comfortable with the syntax</strong> as coming from a <strong>C</strong> background and I appreciate its <strong>dynamic</strong> and <strong>functional</strong> nature as I was already exposed to those concepts through <strong>Python</strong>. I am impressed by the recent developments in the JavaScript ecosystem, especially <a href="http://nodejs.org/">Node.js</a>, and the rise of <a href="http://www.infragistics.com/community/blogs/nanil/archive/2013/04/01/exploring-javascript-mv-frameworks-part-1-hello-backbonejs.aspx">front-end MV* frameworks</a>. Though <strong>it has its <a href="http://darkhelmet.github.io/javascript-the-bad-parts/#/title">quirks</a></strong>, I have planned to take it very seriously and pursue it to be a <strong>full stack JavaScript developer</strong>. I am also looking forward to learn some <strong>un-conventional but exciting!</strong> technologies like <a href="http://www.mongodb.org/">MongoDB</a>, <a href="http://redis.io/">Redis</a> and the list goes on.</p>

<p>By now, you might have concluded that <strong>I am a language geek!</strong> For people out there planning to go on a similar adventure, I would like to say that, <strong>try to focus on problem solving rather than getting lost in the syntax details</strong>. The syntax will come naturally once you learn the basics. I wish you good luck for  your programmatic journey. Just don&rsquo;t forget to have fun! :)</p>
]]></content>
  </entry>
  
</feed>
